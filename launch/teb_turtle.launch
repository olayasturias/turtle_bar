<launch>
  <arg name="gui"        default="true"/>
  <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(find turtle_bar)/worlds/cafe_beer.world"/>
  </include>

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" respawn="true" />

  <include file="$(find turtlebot_teleop)/launch/keyboard_teleop.launch"/>
  <!--include file="$(find turtlebot_gazebo)/launch/gmapping_demo.launch"/-->

  <!-- ************** Navigation *************** -->
  <node pkg="move_base" type="move_base" clear_params="true" respawn="false" name="move_base" output="screen" >

  <rosparam file="$(find turtle_bar)/cfg/costmap_common_params.yaml" command="load" ns="global_costmap"/>

  <rosparam file="$(find turtle_bar)/cfg/costmap_common_params.yaml" command="load" ns="local_costmap"/>

  <rosparam file="$(find turtle_bar)/cfg/local_costmap_params.yaml" command="load" />

  <rosparam file="$(find turtle_bar)/cfg/global_costmap_params.yaml" command="load" />

  <rosparam file="$(find turtle_bar)/cfg/teb_local_planner_params.yaml" command ="load"/>

  <param name="base_global_planner" value="global_planner/GlobalPlanner"/>
  <param name="planner_frequency" value="1.0" />
  <param name="planner_patience" value="5.0" />

  <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS"/>
  <param name="controller_frequency" value="5.0" />
  <param name="controller_patience" value="15.0" />
  <remap from="/cmd_vel" to="/mobile_base/commands/velocity"/>
  </node>

  <!-- ****** Maps ***** -->
  <node name="map_server" pkg="map_server" type="map_server" args
  ="$(find turtle_bar)/maps/maze.yaml" output="screen">
  <param name="frame_id" value="map"/>
  </node>

<!-- ****** AMCL ***** -->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <param name="initial_pose_x" value="2"/>
    <param name="initial_pose_y" value="2"/>
    <param name="initial_pose_a" value="0"/>
    <param name="odom_model_type" value="diff"/>
    <param name="use_map_topic" value="true"/>
    <param name="transform_tolerance" value="0.5"/>
  </node>

</launch>
